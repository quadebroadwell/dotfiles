;; Object dotfiles/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "dotfiles/"
  :tables
  (list
    (semanticdb-table "emacs"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [1 14])
            ("emacs-root" variable (:default-value (if (or (eq system-type (quote cygwin)) (eq system-type (quote gnu/linux)) (eq system-type (quote linux))) "/home/dotfiles/emacs_" "c:/home/dotfiles/emacs_")) nil [76 250])
            ("add-to-list" code nil nil [252 295])
            ("add-to-list" code nil nil [296 361])
            ("add-to-list" code nil nil [362 420])
            ("setq" code nil nil [421 499])
            ("load-file" code nil nil [605 655])
            ("global-ede-mode" code nil nil [656 675])
            ("semantic-load-enable-code-helpers" code nil nil [736 771])
            ("global-srecode-minor-mode" code nil nil [823 852])
            ("setq" code nil nil [1079 1121])
            ("setq" code nil nil [1122 1156])
            ("setq" code nil nil [1157 1198])
            ("setq" code nil nil [1199 1247])
            ("setq" code nil nil [1248 1310])
            ("org-install" include nil nil [1311 1333])
            ("org-babel-do-load-languages" code nil nil [1334 1434])
            ("global-set-key" code nil nil [1436 1476])
            ("global-set-key" code nil nil [1477 1514])
            ("global-set-key" code nil nil [1515 1551])
            ("global-set-key" code nil nil [1552 1590])
            ("setq" code nil nil [1591 1624])
            ("setq" code nil nil [1625 1673])
            ("setq" code nil nil [1674 1776])
            ("setq" code nil nil [1777 2025])
            ("setq" code nil nil [2027 2078])
            ("setq" code nil nil [2079 2116])
            ("custom-set-variables" code nil nil [2394 4163])
            ("custom-set-faces" code nil nil [4164 4403])
            ("setq" code nil nil [4527 4900])
            ("package" include nil nil [5223 5241])
            ("dolist" code nil nil [5242 5625])
            ("package-initialize" code nil nil [5626 5646])
            ("add-hook" code nil nil [5815 5855])
            ("volatile-highlights" include nil nil [6129 6159])
            ("volatile-highlights-mode" code nil nil [6160 6188])
            ("yasnippet" include nil nil [6395 6415])
            ("yas-global-mode" code nil nil [6416 6435])
            ("global-auto-revert-mode" code nil nil [6695 6720])
            ("global-set-key" code nil nil [6990 7033])
            ("setq" code nil nil [7060 8016])
            ("global-hl-line-mode" code nil nil [8051 8072])
            ("setq" code nil nil [8107 8140])
            ("add-hook" code nil nil [8217 8255])
            ("add-hook" code nil nil [8409 8495])
            ("global-set-key" code nil nil [8559 8606])
            ("windmove-default-keybindings" code nil nil [8671 8701])
            ("add-hook" code nil nil [8886 8934])
            ("helm" include nil nil [9101 9116])
            ("helm-config" include nil nil [9117 9139])
            ("helm-eshell" include nil nil [9140 9162])
            ("helm-files" include nil nil [9163 9184])
            ("wgrep-helm" include nil nil [9185 9206])
            ("define-key" code nil nil [9208 9275])
            ("define-key" code nil nil [9314 9379])
            ("define-key" code nil nil [9409 9463])
            ("eval-after-load" code nil nil [9490 9799])
            ("setq" code nil nil [9801 11533])
            ("define-key" code nil nil [11535 11594])
            ("define-key" code nil nil [11595 11654])
            ("define-key" code nil nil [11655 11714])
            ("global-set-key" code nil nil [11716 11754])
            ("global-set-key" code nil nil [11755 11804])
            ("global-set-key" code nil nil [11805 11846])
            ("global-set-key" code nil nil [11847 11896])
            ("global-set-key" code nil nil [11897 11945])
            ("global-set-key" code nil nil [11946 11992])
            ("global-set-key" code nil nil [11993 12036])
            ("global-set-key" code nil nil [12037 12082])
            ("global-set-key" code nil nil [12083 12127])
            ("global-set-key" code nil nil [12128 12174])
            ("add-hook" code nil nil [12211 12340])
            ("add-hook" code nil nil [12381 12455])
            ("helm-mode" code nil nil [12457 12468])
            ("ask-user-about-supersession-threat" function (:arguments ("fn")) nil [12605 12703])
            ("ask-user-about-lock" function (:arguments ("file" "opponent")) nil [12704 12773])
            ("global-auto-revert-mode" code nil nil [12774 12799])
            ("global-set-key" code nil nil [12802 12843])
            ("load-theme" code nil nil [12846 12867])
            ("ecb" include nil nil [12886 12900])
            ("ecb-autoloads" include nil nil [12901 12925])
            ("setq" code nil nil [12926 12979])
            ("setq" code nil nil [12980 13014])
            ("auto-complete-clang" include nil nil [13015 13045])
            ("auto-complete-c-headers" include nil nil [13046 13080])
            ("add-to-list" code nil nil [13081 13127])
            ("helm-company" function (:prototype-flag t) nil [13129 13168])
            ("eval-after-load" code nil nil [13208 13369])
            ("ede-cpp-root-project" code nil nil [13372 13699])
            ("setq" code nil nil [13820 13879])
            ("add-to-list" code nil nil [13880 13925])
            ("python-mode" include nil nil [13926 13948])
            ("setq-default" code nil nil [13964 14002])
            ("setq-default" code nil nil [14003 14044])
            ("setq" code nil nil [14098 14174])
            ("setq" code nil nil [14175 14208])
            ("setq" code nil nil [14259 14304])
            ("setq" code nil nil [14305 14344])
            ("setq" code nil nil [14367 14407])
            ("setq" code nil nil [14454 14483])
            ("recover-session" code nil nil [14486 14503]))          
      :file "emacs"
      :pointmax 14506
      :fsize 14505
      :lastmodtime '(21523 25552 758789 26000)
      :unmatched-syntax nil))
  :file "!home!ubuntu!dotfiles!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
